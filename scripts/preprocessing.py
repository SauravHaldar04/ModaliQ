import spacy
from collections import Counter

def extract_keywords(text):
    # Load the English language model
    nlp = spacy.load("en_core_web_sm")

    # Process the text
    doc = nlp(text)

    # Extract keywords using POS tagging
    pos_keywords = [token.text for token in doc if token.pos_ in ['NOUN', 'PROPN', 'ADJ', 'ADV', 'X']]

    # Extract named entities
    ner_keywords = [ent.text for ent in doc.ents]

    # Combine POS and NER keywords
    all_keywords = pos_keywords + ner_keywords

    # Count the frequency of keywords
    keyword_counts = Counter(all_keywords)

    # Sort keywords by frequency (descending order)
    sorted_keywords = sorted(keyword_counts.items(), key=lambda x: x[1], reverse=True)

    # Extract top N keywords (adjust N as needed)
    top_keywords = [keyword for keyword, _ in sorted_keywords[:10]]

    return top_keywords

# # Example usage
# chapter_text = text='''
# In this video we will learn about loops. Loops are repeating statements. There are four types of loops in Java. Why loop? Do why loop? For and for each loop. In this video I will explain about these three loops. This we will learn it in some other video along with some other topic. So I will just show you how these loops are written and how they work. What is their working? And example programs we will see them in the next video. So loops are meant for repeating the set of statements. See there are lot of procedures that we do in our daily life and we perform repeated steps for completing that procedure. Like if I take the example of computations, for example of computation, if I have to find out a GCD of some numbers, then I have to go on subtracting the numbers. If I am finding Lcm of some numbers, then I have to go on dividing the numbers with common factors. So it is not one step. We have to repeatedly do it more than one times. So when you have to do the similar work repeatedly, then that you can put it in the form of a loop. As I said, loops are used for repeating the set of statements. See in our daily life we do lot of things that some steps are repeated in the procedures. So in computations, like if I take the example of finding Lcm of two numbers, then we divide the number by some common factor. Then again we divide, then again we divide. So we perform the same thing again and again until we get the result. So the procedure is having a step which is repeated until we reach some condition or some state. So likewise there are many procedures that we do in computations where we require repetition. So that type of procedures we can do them using loops in programming. So when we want to write a program for any procedure that we do it using pen and paper and it is having repeated step, then we can use loop there. We will see lots of example in Java we have lot of chances for using these type of statements. So we will learn them by using them. Now let us learn about each one by one. So first of all I have a flow chart here to show you what does it mean by repetition of statement. See this is the flow of program and there is some condition. If the condition is true then this process will be done and again it will come back here. So again the condition is check. If the condition is true then the process whatever the steps are that steps are repeated and again it will continue. So again it will go back to this point. As long as the condition is true it will be repeating here. So this is like a loop. Same steps are repeated again as long as the condition is true. Once the condition becomes false it will do the rest of the work whatever the things we have to do followed by that. So this is how we can diagrammatically understand the working of loops. Now it takes some example task, example program and I will show you while loop and do while loop. So here is the skeleton of while and do while loop. There is the syntax of while and do while while and we write some condition here and then these are the statements. These lines are showing the statements inside the body of while. So this is the starting and ending point of while. So this will first check the condition if the condition is true then these steps are executed. This is nothing but a process whatever the work that you want to do that is a process. Then once it reaches the body of this one end of this one then it will again come back and check the condition if the condition is true then again execute. So it will be going on doing it as long as the condition is true and it will stop once the condition is false. If the condition is false then it will come out of this body and it will execute the rest of the statements. So if you want to repeatedly execute the set of statement until the condition is true then you can use this syntax that is while loop. So here I am showing it in the diagram that is flow chart. See this is the flow of program. So condition is checked if the condition is true then the process is executed then again condition is checked if true, true then process is done. So this will be repeated. So first condition is checked and if it is true this process is done. First condition is checked then if it is true then this process is done. The block is executed. Now next let us look at do while loop. This is do and while. So this is the syntax. So in the syntax you have to use do and the flow of brackets then while and the condition and this must be terminated by semi-colon. Now let us see how this works. So first it will execute this block of statement. This is the work that you want to do that is nothing but a process and first it will execute the block then checks the condition. So if the condition is true then again it will go to do and continue the process. So as long as the condition is true this block of statements will be executed. So the diagram for this one is given here. First it will process means it will perform the steps whatever the steps that you want to repeat then condition is checked if it is true then again go back here and again repeat the process. So this is the diagram. Now if I compare them this is pre-tested or pre-checked loop. First it will check the condition then it will execute and this is post-tested. First it will execute the block then it will check the condition. So it means that this loop will execute this block minimum one time. Definitely it will execute. Let us see if I have a variable n and it is having value 0. Okay so already it is 0. Suppose I said the condition that n is not equal to 0 then do this one. If you check the condition first time n is equal to 0 not equal to 0 will be false. So the condition is false so it will not enter into this block it will not execute the block. So if the condition is already false it will not execute at all. Now here if I have same n and it is 0 and here if I write down the condition that n is not equal to 0. See n is equal to 0 not equal to will be false. So let us see how it works. First it will execute the block then check the condition. Condition is false so it will stop. It will not continue further. So this process is executed once and here the process was not executed at all. So if the condition is already false this will never execute and this will minimum execute one time. So this is the syntax and the working of while and do while look mostly student get confused that way to use do while look. So I will. So I will. So I will. So I will. So I will. So I will. So I will. So I will. So I will. So I will. So I will. So I will. So I will. So I will. So I will. So I will. So I will. So I will. So I will. So I will. So I will. So I will. So I will. So I will. So I will. So I will. So I will. So I should, so I will. So I will. Re 상태. So I will. So, I will. So, I will. So, I will. So, I will. So, I will. So, I will. So, I will.
# '''
# keywords = extract_keywords(chapter_text)
# print("Extracted Keywords:")
# for keyword in keywords:
#     print(f"- {keyword}")